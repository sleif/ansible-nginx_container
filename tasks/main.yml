---
# sleif/roles/nginx_container/tasks/main.yml

- name: "Create {{ container_storage_dir_base + '/nginx_for_' + virtual_host + '/html/.well-known' }}"
  ansible.builtin.file:
    state: directory
    path: "{{ container_storage_dir_base + '/nginx_for_' + virtual_host + '/html/.well-known' }}"
    mode: '0644'

- name: "Create {{ container_storage_dir_base + '/nginx_for_' + virtual_host + '/conf' }}"
  ansible.builtin.file:
    state: directory
    path: "{{ container_storage_dir_base + '/nginx_for_' + virtual_host + '/conf' }}"
    mode: '0755'

- name: 'Copy index.html if none exists yet.'
  ansible.builtin.copy:
    src: 'index.html'
    dest: '{{ container_storage_dir_base }}/nginx_for_{{ virtual_host }}/html/index.html'
    force: false
    mode: '0644'

- name: 'Copy individual for nginx-conf if none exists yet.'
  ansible.builtin.copy:
    src: 'individual.conf'
    dest: '{{ container_storage_dir_base }}/nginx_for_{{ virtual_host }}/conf/individual.conf'
    force: false
    mode: '0644'

- name: 'Copy dnt-policy.txt and force overwrite.'
  ansible.builtin.copy:
    src: 'dnt-policy.txt'
    dest: '{{ container_storage_dir_base }}/nginx_for_{{ virtual_host }}/html/.well-known/dnt-policy.txt'
    force: true
    mode: '0644'

- name: 'Start nginx for {{ virtual_host }}'
  containers.podman.podman_container:
    name: 'nginx_for_{{ virtual_host | replace(",", "-") }}'
    image: docker.io/nginx:alpine
    state: started
    restart_policy: always
    recreate: true
    network: "{{ podman_network_name }}"
    generate_systemd:
      path: /etc/systemd/system/
      restart_policy: always
    # security_opts: label:type:docker_t
    volumes:
      - '{{ container_storage_dir_base }}/nginx_for_{{ virtual_host }}/html:/usr/share/nginx/html:ro,Z'
      - '{{ container_storage_dir_base }}/nginx_for_{{ virtual_host }}/conf/individual.conf:/etc/nginx/conf.d/individual.conf:ro,Z'
    env:
      # These are to automatically generate the certs
      VIRTUAL_HOST: "{{ virtual_host }}"
      LETSENCRYPT_HOST: "{{ virtual_host }}"
      LETSENCRYPT_EMAIL: "{{ letsencrypt_email }}"
  register: _container_start_results
# - debug: var=_container_start_results

- name: Enable systemd service
  ansible.builtin.service:
    name: "{{ (_container_start_results.podman_systemd | dict2items | list | first).key }}"
    enabled: true
